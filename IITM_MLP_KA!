{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/afsarai/iitm-mlp-ka1?scriptVersionId=266618627\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"2caa0486","metadata":{"_cell_guid":"779e42cd-d28d-44af-8738-37e41279076d","_uuid":"1ed6d464-c8a9-4baa-bdaf-9b0b297993fd","collapsed":false,"execution":{"iopub.execute_input":"2025-10-08T15:53:42.662436Z","iopub.status.busy":"2025-10-08T15:53:42.662095Z","iopub.status.idle":"2025-10-08T15:53:44.430114Z","shell.execute_reply":"2025-10-08T15:53:44.429156Z"},"jupyter":{"outputs_hidden":false},"papermill":{"duration":1.782606,"end_time":"2025-10-08T15:53:44.4316","exception":false,"start_time":"2025-10-08T15:53:42.648994","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["/kaggle/input/mlp-term-2-2025-kaggle-assignment-1/sample_submission.csv\n","/kaggle/input/mlp-term-2-2025-kaggle-assignment-1/train.csv\n","/kaggle/input/mlp-term-2-2025-kaggle-assignment-1/test.csv\n"]}],"source":["# This Python 3 environment comes with many helpful analytics libraries installed\n","# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n","# For example, here's several helpful packages to load\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","\n","# Input data files are available in the read-only \"../input/\" directory\n","# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n","# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n","# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"]},{"cell_type":"markdown","id":"a4e16315","metadata":{"_cell_guid":"c40ebbaa-e82d-4ef3-9fa3-84799843fb35","_uuid":"d40ecf81-8a36-43df-8cce-dcd06c7e136d","collapsed":false,"jupyter":{"outputs_hidden":false},"papermill":{"duration":0.01003,"end_time":"2025-10-08T15:53:44.452405","exception":false,"start_time":"2025-10-08T15:53:44.442375","status":"completed"},"tags":[]},"source":["# Loading Datasets"]},{"cell_type":"code","execution_count":2,"id":"078d45f7","metadata":{"_cell_guid":"caf4f833-bc58-4a19-a769-daa706d6dd3c","_uuid":"e96bf223-0894-409f-985e-92d5c448a810","collapsed":false,"execution":{"iopub.execute_input":"2025-10-08T15:53:44.474284Z","iopub.status.busy":"2025-10-08T15:53:44.4739Z","iopub.status.idle":"2025-10-08T15:53:44.477776Z","shell.execute_reply":"2025-10-08T15:53:44.477093Z"},"jupyter":{"outputs_hidden":false},"papermill":{"duration":0.016037,"end_time":"2025-10-08T15:53:44.479092","exception":false,"start_time":"2025-10-08T15:53:44.463055","status":"completed"},"tags":[]},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","execution_count":3,"id":"4aa589a1","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:44.501108Z","iopub.status.busy":"2025-10-08T15:53:44.500831Z","iopub.status.idle":"2025-10-08T15:53:44.649051Z","shell.execute_reply":"2025-10-08T15:53:44.648349Z"},"papermill":{"duration":0.161199,"end_time":"2025-10-08T15:53:44.65057","exception":false,"start_time":"2025-10-08T15:53:44.489371","status":"completed"},"tags":[]},"outputs":[],"source":["test_df = pd.read_csv('/kaggle/input/mlp-term-2-2025-kaggle-assignment-1/test.csv')\n","train_df = pd.read_csv('/kaggle/input/mlp-term-2-2025-kaggle-assignment-1/train.csv')"]},{"cell_type":"code","execution_count":4,"id":"611910fa","metadata":{"_cell_guid":"61ff6b71-64b7-4d4d-83a9-56c40952217e","_uuid":"ff5d436b-9a71-4a51-8663-27854de604e5","collapsed":false,"execution":{"iopub.execute_input":"2025-10-08T15:53:44.672433Z","iopub.status.busy":"2025-10-08T15:53:44.672116Z","iopub.status.idle":"2025-10-08T15:53:44.699527Z","shell.execute_reply":"2025-10-08T15:53:44.698492Z"},"jupyter":{"outputs_hidden":false},"papermill":{"duration":0.040049,"end_time":"2025-10-08T15:53:44.700997","exception":false,"start_time":"2025-10-08T15:53:44.660948","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n","  has_large_values = (abs_vals > 1e6).any()\n","/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n"]},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>airline</th>\n","      <th>flight</th>\n","      <th>source</th>\n","      <th>departure</th>\n","      <th>stops</th>\n","      <th>arrival</th>\n","      <th>destination</th>\n","      <th>class</th>\n","      <th>duration</th>\n","      <th>days_left</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Vistara</td>\n","      <td>UK-930</td>\n","      <td>Mumbai</td>\n","      <td>Early_Morning</td>\n","      <td>one</td>\n","      <td>Night</td>\n","      <td>Chennai</td>\n","      <td>Business</td>\n","      <td>NaN</td>\n","      <td>40.0</td>\n","      <td>64173</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Air_India</td>\n","      <td>AI-539</td>\n","      <td>Chennai</td>\n","      <td>Evening</td>\n","      <td>one</td>\n","      <td>Morning</td>\n","      <td>Mumbai</td>\n","      <td>Economy</td>\n","      <td>16.08</td>\n","      <td>26.0</td>\n","      <td>4357</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>SpiceJet</td>\n","      <td>SG-8107</td>\n","      <td>Delhi</td>\n","      <td>Early_Morning</td>\n","      <td>zero</td>\n","      <td>Morning</td>\n","      <td>Chennai</td>\n","      <td>Economy</td>\n","      <td>2.92</td>\n","      <td>25.0</td>\n","      <td>3251</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>0.00E+00</td>\n","      <td>Hyderabad</td>\n","      <td>Early_Morning</td>\n","      <td>zero</td>\n","      <td>Morning</td>\n","      <td>Bangalore</td>\n","      <td>Economy</td>\n","      <td>1.50</td>\n","      <td>22.0</td>\n","      <td>1776</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Air_India</td>\n","      <td>AI-569</td>\n","      <td>Chennai</td>\n","      <td>Early_Morning</td>\n","      <td>one</td>\n","      <td>Morning</td>\n","      <td>Bangalore</td>\n","      <td>Economy</td>\n","      <td>4.83</td>\n","      <td>20.0</td>\n","      <td>3584</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   id    airline    flight     source      departure stops  arrival  \\\n","0   0    Vistara    UK-930     Mumbai  Early_Morning   one    Night   \n","1   1  Air_India    AI-539    Chennai        Evening   one  Morning   \n","2   2   SpiceJet   SG-8107      Delhi  Early_Morning  zero  Morning   \n","3   3        NaN  0.00E+00  Hyderabad  Early_Morning  zero  Morning   \n","4   4  Air_India    AI-569    Chennai  Early_Morning   one  Morning   \n","\n","  destination     class  duration  days_left  price  \n","0     Chennai  Business       NaN       40.0  64173  \n","1      Mumbai   Economy     16.08       26.0   4357  \n","2     Chennai   Economy      2.92       25.0   3251  \n","3   Bangalore   Economy      1.50       22.0   1776  \n","4   Bangalore   Economy      4.83       20.0   3584  "]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["train_df.head()"]},{"cell_type":"code","execution_count":5,"id":"9cf7eeea","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:44.723815Z","iopub.status.busy":"2025-10-08T15:53:44.723498Z","iopub.status.idle":"2025-10-08T15:53:44.736536Z","shell.execute_reply":"2025-10-08T15:53:44.735562Z"},"papermill":{"duration":0.025994,"end_time":"2025-10-08T15:53:44.737942","exception":false,"start_time":"2025-10-08T15:53:44.711948","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1458: RuntimeWarning: invalid value encountered in greater\n","  has_large_values = (abs_vals > 1e6).any()\n","/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in less\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n","/usr/local/lib/python3.11/dist-packages/pandas/io/formats/format.py:1459: RuntimeWarning: invalid value encountered in greater\n","  has_small_values = ((abs_vals < 10 ** (-self.digits)) & (abs_vals > 0)).any()\n"]},{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>airline</th>\n","      <th>flight</th>\n","      <th>source</th>\n","      <th>departure</th>\n","      <th>stops</th>\n","      <th>arrival</th>\n","      <th>destination</th>\n","      <th>class</th>\n","      <th>duration</th>\n","      <th>days_left</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Vistara</td>\n","      <td>UK-816</td>\n","      <td>Bangalore</td>\n","      <td>Morning</td>\n","      <td>zero</td>\n","      <td>Afternoon</td>\n","      <td>Delhi</td>\n","      <td>Economy</td>\n","      <td>2.67</td>\n","      <td>18.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Air_India</td>\n","      <td>AI-440</td>\n","      <td>Chennai</td>\n","      <td>Early_Morning</td>\n","      <td>zero</td>\n","      <td>Morning</td>\n","      <td>Delhi</td>\n","      <td>Economy</td>\n","      <td>NaN</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>SpiceJet</td>\n","      <td>SG-8938</td>\n","      <td>Delhi</td>\n","      <td>Evening</td>\n","      <td>one</td>\n","      <td>Evening</td>\n","      <td>Bangalore</td>\n","      <td>Economy</td>\n","      <td>NaN</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Vistara</td>\n","      <td>UK-838</td>\n","      <td>Chennai</td>\n","      <td>Night</td>\n","      <td>one</td>\n","      <td>Evening</td>\n","      <td>Kolkata</td>\n","      <td>Business</td>\n","      <td>21.00</td>\n","      <td>26.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Air_India</td>\n","      <td>AI-429</td>\n","      <td>Delhi</td>\n","      <td>Morning</td>\n","      <td>one</td>\n","      <td>Evening</td>\n","      <td>Mumbai</td>\n","      <td>Business</td>\n","      <td>7.25</td>\n","      <td>22.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   id    airline   flight     source      departure stops    arrival  \\\n","0   0    Vistara   UK-816  Bangalore        Morning  zero  Afternoon   \n","1   1  Air_India   AI-440    Chennai  Early_Morning  zero    Morning   \n","2   2   SpiceJet  SG-8938      Delhi        Evening   one    Evening   \n","3   3    Vistara   UK-838    Chennai          Night   one    Evening   \n","4   4  Air_India   AI-429      Delhi        Morning   one    Evening   \n","\n","  destination     class  duration  days_left  \n","0       Delhi   Economy      2.67       18.0  \n","1       Delhi   Economy       NaN        5.0  \n","2   Bangalore   Economy       NaN       44.0  \n","3     Kolkata  Business     21.00       26.0  \n","4      Mumbai  Business      7.25       22.0  "]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["test_df.head()"]},{"cell_type":"markdown","id":"e6c44775","metadata":{"papermill":{"duration":0.011194,"end_time":"2025-10-08T15:53:44.760409","exception":false,"start_time":"2025-10-08T15:53:44.749215","status":"completed"},"tags":[]},"source":["# Identifing data types of different columns"]},{"cell_type":"code","execution_count":6,"id":"674fb841","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:44.783017Z","iopub.status.busy":"2025-10-08T15:53:44.782726Z","iopub.status.idle":"2025-10-08T15:53:44.788282Z","shell.execute_reply":"2025-10-08T15:53:44.787489Z"},"papermill":{"duration":0.018607,"end_time":"2025-10-08T15:53:44.789697","exception":false,"start_time":"2025-10-08T15:53:44.77109","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["(40000, 12)"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["train_df.shape"]},{"cell_type":"code","execution_count":7,"id":"68796f89","metadata":{"_cell_guid":"5a314593-f132-47e5-a4c0-39920d52b3e3","_uuid":"1376f132-dfc4-4e5b-bbc7-8962f480cc6e","collapsed":false,"execution":{"iopub.execute_input":"2025-10-08T15:53:44.81208Z","iopub.status.busy":"2025-10-08T15:53:44.81182Z","iopub.status.idle":"2025-10-08T15:53:44.852871Z","shell.execute_reply":"2025-10-08T15:53:44.852011Z"},"jupyter":{"outputs_hidden":false},"papermill":{"duration":0.054053,"end_time":"2025-10-08T15:53:44.854414","exception":false,"start_time":"2025-10-08T15:53:44.800361","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 40000 entries, 0 to 39999\n","Data columns (total 12 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   id           40000 non-null  int64  \n"," 1   airline      35387 non-null  object \n"," 2   flight       40000 non-null  object \n"," 3   source       40000 non-null  object \n"," 4   departure    35208 non-null  object \n"," 5   stops        37681 non-null  object \n"," 6   arrival      40000 non-null  object \n"," 7   destination  40000 non-null  object \n"," 8   class        40000 non-null  object \n"," 9   duration     36987 non-null  float64\n"," 10  days_left    35562 non-null  float64\n"," 11  price        40000 non-null  int64  \n","dtypes: float64(2), int64(2), object(8)\n","memory usage: 3.7+ MB\n"]}],"source":["train_df.info()"]},{"cell_type":"code","execution_count":8,"id":"c47ff200","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:44.878041Z","iopub.status.busy":"2025-10-08T15:53:44.87777Z","iopub.status.idle":"2025-10-08T15:53:44.891422Z","shell.execute_reply":"2025-10-08T15:53:44.890402Z"},"papermill":{"duration":0.027111,"end_time":"2025-10-08T15:53:44.892892","exception":false,"start_time":"2025-10-08T15:53:44.865781","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 10000 entries, 0 to 9999\n","Data columns (total 11 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   id           10000 non-null  int64  \n"," 1   airline      9452 non-null   object \n"," 2   flight       10000 non-null  object \n"," 3   source       10000 non-null  object \n"," 4   departure    9080 non-null   object \n"," 5   stops        9349 non-null   object \n"," 6   arrival      10000 non-null  object \n"," 7   destination  10000 non-null  object \n"," 8   class        10000 non-null  object \n"," 9   duration     9418 non-null   float64\n"," 10  days_left    9304 non-null   float64\n","dtypes: float64(2), int64(1), object(8)\n","memory usage: 859.5+ KB\n"]}],"source":["test_df.info()"]},{"cell_type":"markdown","id":"32d4fa46","metadata":{"papermill":{"duration":0.011143,"end_time":"2025-10-08T15:53:44.915819","exception":false,"start_time":"2025-10-08T15:53:44.904676","status":"completed"},"tags":[]},"source":["# Descriptive statistics of numerical columns"]},{"cell_type":"code","execution_count":9,"id":"afd49b1c","metadata":{"_cell_guid":"6de18538-8bb5-42f0-b7b6-745f29493d83","_uuid":"b6f223cb-61ea-4882-9af2-942950c1f156","collapsed":false,"execution":{"iopub.execute_input":"2025-10-08T15:53:44.939845Z","iopub.status.busy":"2025-10-08T15:53:44.939534Z","iopub.status.idle":"2025-10-08T15:53:44.963196Z","shell.execute_reply":"2025-10-08T15:53:44.962492Z"},"jupyter":{"outputs_hidden":false},"papermill":{"duration":0.037429,"end_time":"2025-10-08T15:53:44.964477","exception":false,"start_time":"2025-10-08T15:53:44.927048","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>duration</th>\n","      <td>36987.0</td>\n","      <td>12.004088</td>\n","      <td>7.108063</td>\n","      <td>0.83</td>\n","      <td>6.67</td>\n","      <td>11.08</td>\n","      <td>15.92</td>\n","      <td>47.08</td>\n","    </tr>\n","    <tr>\n","      <th>days_left</th>\n","      <td>35562.0</td>\n","      <td>26.197936</td>\n","      <td>13.469232</td>\n","      <td>1.00</td>\n","      <td>15.00</td>\n","      <td>26.00</td>\n","      <td>38.00</td>\n","      <td>49.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             count       mean        std   min    25%    50%    75%    max\n","duration   36987.0  12.004088   7.108063  0.83   6.67  11.08  15.92  47.08\n","days_left  35562.0  26.197936  13.469232  1.00  15.00  26.00  38.00  49.00"]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["train_df.loc[:, ['duration', 'days_left']].describe().T"]},{"cell_type":"code","execution_count":10,"id":"a955aa52","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:44.98771Z","iopub.status.busy":"2025-10-08T15:53:44.987414Z","iopub.status.idle":"2025-10-08T15:53:45.003758Z","shell.execute_reply":"2025-10-08T15:53:45.003088Z"},"papermill":{"duration":0.029402,"end_time":"2025-10-08T15:53:45.005024","exception":false,"start_time":"2025-10-08T15:53:44.975622","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>duration</th>\n","      <td>9418.0</td>\n","      <td>12.005125</td>\n","      <td>7.086652</td>\n","      <td>0.92</td>\n","      <td>6.67</td>\n","      <td>11.17</td>\n","      <td>15.92</td>\n","      <td>40.42</td>\n","    </tr>\n","    <tr>\n","      <th>days_left</th>\n","      <td>9304.0</td>\n","      <td>26.163156</td>\n","      <td>13.453717</td>\n","      <td>1.00</td>\n","      <td>15.00</td>\n","      <td>26.00</td>\n","      <td>38.00</td>\n","      <td>49.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            count       mean        std   min    25%    50%    75%    max\n","duration   9418.0  12.005125   7.086652  0.92   6.67  11.17  15.92  40.42\n","days_left  9304.0  26.163156  13.453717  1.00  15.00  26.00  38.00  49.00"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["test_df.loc[:, ['duration', 'days_left']].describe().T"]},{"cell_type":"markdown","id":"0594305c","metadata":{"papermill":{"duration":0.070909,"end_time":"2025-10-08T15:53:45.087104","exception":false,"start_time":"2025-10-08T15:53:45.016195","status":"completed"},"tags":[]},"source":["# Identifying and handling the missing values"]},{"cell_type":"code","execution_count":11,"id":"434a719b","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:45.111646Z","iopub.status.busy":"2025-10-08T15:53:45.111044Z","iopub.status.idle":"2025-10-08T15:53:45.137156Z","shell.execute_reply":"2025-10-08T15:53:45.136249Z"},"papermill":{"duration":0.040019,"end_time":"2025-10-08T15:53:45.13864","exception":false,"start_time":"2025-10-08T15:53:45.098621","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["id                0\n","airline        4613\n","flight            0\n","source            0\n","departure      4792\n","stops          2319\n","arrival           0\n","destination       0\n","class             0\n","duration       3013\n","days_left      4438\n","price             0\n","dtype: int64"]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["train_df.isna().sum()"]},{"cell_type":"code","execution_count":12,"id":"a291d0fb","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:45.163138Z","iopub.status.busy":"2025-10-08T15:53:45.162556Z","iopub.status.idle":"2025-10-08T15:53:45.173485Z","shell.execute_reply":"2025-10-08T15:53:45.172837Z"},"papermill":{"duration":0.024425,"end_time":"2025-10-08T15:53:45.174611","exception":false,"start_time":"2025-10-08T15:53:45.150186","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["id               0\n","airline        548\n","flight           0\n","source           0\n","departure      920\n","stops          651\n","arrival          0\n","destination      0\n","class            0\n","duration       582\n","days_left      696\n","dtype: int64"]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["test_df.isnull().sum()"]},{"cell_type":"code","execution_count":13,"id":"5a7b8b37","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:45.198274Z","iopub.status.busy":"2025-10-08T15:53:45.197751Z","iopub.status.idle":"2025-10-08T15:53:45.201462Z","shell.execute_reply":"2025-10-08T15:53:45.200811Z"},"papermill":{"duration":0.016839,"end_time":"2025-10-08T15:53:45.202783","exception":false,"start_time":"2025-10-08T15:53:45.185944","status":"completed"},"tags":[]},"outputs":[],"source":["cat = ['airline', 'departure', 'stops']\n","num = ['duration', 'days_left']"]},{"cell_type":"code","execution_count":14,"id":"cb789d61","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:45.226998Z","iopub.status.busy":"2025-10-08T15:53:45.226746Z","iopub.status.idle":"2025-10-08T15:53:46.789727Z","shell.execute_reply":"2025-10-08T15:53:46.788792Z"},"papermill":{"duration":1.576996,"end_time":"2025-10-08T15:53:46.791392","exception":false,"start_time":"2025-10-08T15:53:45.214396","status":"completed"},"tags":[]},"outputs":[],"source":["from sklearn.compose import ColumnTransformer\n","from sklearn.pipeline import Pipeline\n","from sklearn.impute import SimpleImputer"]},{"cell_type":"code","execution_count":15,"id":"e17c3631","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:46.815731Z","iopub.status.busy":"2025-10-08T15:53:46.815344Z","iopub.status.idle":"2025-10-08T15:53:46.81977Z","shell.execute_reply":"2025-10-08T15:53:46.819134Z"},"papermill":{"duration":0.017848,"end_time":"2025-10-08T15:53:46.821","exception":false,"start_time":"2025-10-08T15:53:46.803152","status":"completed"},"tags":[]},"outputs":[],"source":["ct = ColumnTransformer(\n","    transformers=[\n","        ('cat', SimpleImputer(strategy='most_frequent'), cat),\n","        ('num', SimpleImputer(strategy='mean'), num)\n","    ],\n","    remainder='passthrough',\n","    verbose_feature_names_out=False\n",").set_output(transform='pandas')"]},{"cell_type":"code","execution_count":16,"id":"897bc38c","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:46.844593Z","iopub.status.busy":"2025-10-08T15:53:46.844342Z","iopub.status.idle":"2025-10-08T15:53:46.847949Z","shell.execute_reply":"2025-10-08T15:53:46.847335Z"},"papermill":{"duration":0.016653,"end_time":"2025-10-08T15:53:46.849116","exception":false,"start_time":"2025-10-08T15:53:46.832463","status":"completed"},"tags":[]},"outputs":[],"source":["pipe = Pipeline([\n","    ('ct', ct)\n","])"]},{"cell_type":"code","execution_count":17,"id":"8b74c77e","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:46.872715Z","iopub.status.busy":"2025-10-08T15:53:46.872411Z","iopub.status.idle":"2025-10-08T15:53:46.881977Z","shell.execute_reply":"2025-10-08T15:53:46.881412Z"},"papermill":{"duration":0.022746,"end_time":"2025-10-08T15:53:46.883061","exception":false,"start_time":"2025-10-08T15:53:46.860315","status":"completed"},"tags":[]},"outputs":[],"source":["X_train = train_df.drop(columns=['price'])\n","y_train = train_df['price']"]},{"cell_type":"code","execution_count":18,"id":"602ef6a4","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:46.906729Z","iopub.status.busy":"2025-10-08T15:53:46.90646Z","iopub.status.idle":"2025-10-08T15:53:46.946657Z","shell.execute_reply":"2025-10-08T15:53:46.945963Z"},"papermill":{"duration":0.053735,"end_time":"2025-10-08T15:53:46.948081","exception":false,"start_time":"2025-10-08T15:53:46.894346","status":"completed"},"tags":[]},"outputs":[],"source":["train_df_t = pipe.fit_transform(X_train)"]},{"cell_type":"code","execution_count":19,"id":"1971e4a7","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:46.97214Z","iopub.status.busy":"2025-10-08T15:53:46.971851Z","iopub.status.idle":"2025-10-08T15:53:46.983329Z","shell.execute_reply":"2025-10-08T15:53:46.982756Z"},"papermill":{"duration":0.024835,"end_time":"2025-10-08T15:53:46.984643","exception":false,"start_time":"2025-10-08T15:53:46.959808","status":"completed"},"tags":[]},"outputs":[],"source":["test_df_t = pipe.transform(test_df)"]},{"cell_type":"markdown","id":"15083ed7","metadata":{"papermill":{"duration":0.011046,"end_time":"2025-10-08T15:53:47.00699","exception":false,"start_time":"2025-10-08T15:53:46.995944","status":"completed"},"tags":[]},"source":["## Just for showing all imutations"]},{"cell_type":"code","execution_count":20,"id":"65fa8350","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:47.030485Z","iopub.status.busy":"2025-10-08T15:53:47.030138Z","iopub.status.idle":"2025-10-08T15:53:47.04756Z","shell.execute_reply":"2025-10-08T15:53:47.046804Z"},"papermill":{"duration":0.030739,"end_time":"2025-10-08T15:53:47.048926","exception":false,"start_time":"2025-10-08T15:53:47.018187","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>airline</th>\n","      <th>flight</th>\n","      <th>source</th>\n","      <th>departure</th>\n","      <th>stops</th>\n","      <th>arrival</th>\n","      <th>destination</th>\n","      <th>class</th>\n","      <th>duration</th>\n","      <th>days_left</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Vistara</td>\n","      <td>UK-930</td>\n","      <td>Mumbai</td>\n","      <td>Early_Morning</td>\n","      <td>one</td>\n","      <td>Night</td>\n","      <td>Chennai</td>\n","      <td>Business</td>\n","      <td>12.004088</td>\n","      <td>40.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Air_India</td>\n","      <td>AI-539</td>\n","      <td>Chennai</td>\n","      <td>Evening</td>\n","      <td>one</td>\n","      <td>Morning</td>\n","      <td>Mumbai</td>\n","      <td>Economy</td>\n","      <td>16.080000</td>\n","      <td>26.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>SpiceJet</td>\n","      <td>SG-8107</td>\n","      <td>Delhi</td>\n","      <td>Early_Morning</td>\n","      <td>zero</td>\n","      <td>Morning</td>\n","      <td>Chennai</td>\n","      <td>Economy</td>\n","      <td>2.920000</td>\n","      <td>25.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Vistara</td>\n","      <td>0.00E+00</td>\n","      <td>Hyderabad</td>\n","      <td>Early_Morning</td>\n","      <td>zero</td>\n","      <td>Morning</td>\n","      <td>Bangalore</td>\n","      <td>Economy</td>\n","      <td>1.500000</td>\n","      <td>22.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Air_India</td>\n","      <td>AI-569</td>\n","      <td>Chennai</td>\n","      <td>Early_Morning</td>\n","      <td>one</td>\n","      <td>Morning</td>\n","      <td>Bangalore</td>\n","      <td>Economy</td>\n","      <td>4.830000</td>\n","      <td>20.000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>39995</th>\n","      <td>39995</td>\n","      <td>Vistara</td>\n","      <td>UK-940</td>\n","      <td>Mumbai</td>\n","      <td>Morning</td>\n","      <td>one</td>\n","      <td>Evening</td>\n","      <td>Bangalore</td>\n","      <td>Economy</td>\n","      <td>21.250000</td>\n","      <td>43.000000</td>\n","    </tr>\n","    <tr>\n","      <th>39996</th>\n","      <td>39996</td>\n","      <td>Vistara</td>\n","      <td>UK-720</td>\n","      <td>Kolkata</td>\n","      <td>Early_Morning</td>\n","      <td>one</td>\n","      <td>Night</td>\n","      <td>Mumbai</td>\n","      <td>Business</td>\n","      <td>14.080000</td>\n","      <td>12.000000</td>\n","    </tr>\n","    <tr>\n","      <th>39997</th>\n","      <td>39997</td>\n","      <td>Vistara</td>\n","      <td>UK-874</td>\n","      <td>Hyderabad</td>\n","      <td>Morning</td>\n","      <td>one</td>\n","      <td>Night</td>\n","      <td>Bangalore</td>\n","      <td>Economy</td>\n","      <td>14.330000</td>\n","      <td>26.197936</td>\n","    </tr>\n","    <tr>\n","      <th>39998</th>\n","      <td>39998</td>\n","      <td>Vistara</td>\n","      <td>UK-940</td>\n","      <td>Mumbai</td>\n","      <td>Morning</td>\n","      <td>one</td>\n","      <td>Night</td>\n","      <td>Bangalore</td>\n","      <td>Business</td>\n","      <td>24.670000</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>39999</th>\n","      <td>39999</td>\n","      <td>GO_FIRST</td>\n","      <td>G8-511</td>\n","      <td>Mumbai</td>\n","      <td>Early_Morning</td>\n","      <td>one</td>\n","      <td>Evening</td>\n","      <td>Bangalore</td>\n","      <td>Economy</td>\n","      <td>14.330000</td>\n","      <td>26.197936</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>40000 rows × 11 columns</p>\n","</div>"],"text/plain":["          id    airline    flight     source      departure stops  arrival  \\\n","0          0    Vistara    UK-930     Mumbai  Early_Morning   one    Night   \n","1          1  Air_India    AI-539    Chennai        Evening   one  Morning   \n","2          2   SpiceJet   SG-8107      Delhi  Early_Morning  zero  Morning   \n","3          3    Vistara  0.00E+00  Hyderabad  Early_Morning  zero  Morning   \n","4          4  Air_India    AI-569    Chennai  Early_Morning   one  Morning   \n","...      ...        ...       ...        ...            ...   ...      ...   \n","39995  39995    Vistara    UK-940     Mumbai        Morning   one  Evening   \n","39996  39996    Vistara    UK-720    Kolkata  Early_Morning   one    Night   \n","39997  39997    Vistara    UK-874  Hyderabad        Morning   one    Night   \n","39998  39998    Vistara    UK-940     Mumbai        Morning   one    Night   \n","39999  39999   GO_FIRST    G8-511     Mumbai  Early_Morning   one  Evening   \n","\n","      destination     class   duration  days_left  \n","0         Chennai  Business  12.004088  40.000000  \n","1          Mumbai   Economy  16.080000  26.000000  \n","2         Chennai   Economy   2.920000  25.000000  \n","3       Bangalore   Economy   1.500000  22.000000  \n","4       Bangalore   Economy   4.830000  20.000000  \n","...           ...       ...        ...        ...  \n","39995   Bangalore   Economy  21.250000  43.000000  \n","39996      Mumbai  Business  14.080000  12.000000  \n","39997   Bangalore   Economy  14.330000  26.197936  \n","39998   Bangalore  Business  24.670000   4.000000  \n","39999   Bangalore   Economy  14.330000  26.197936  \n","\n","[40000 rows x 11 columns]"]},"execution_count":20,"metadata":{},"output_type":"execute_result"}],"source":["original_order = X_train.columns\n","train_df_t.reindex(columns=original_order)"]},{"cell_type":"code","execution_count":21,"id":"f8febf5f","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:47.073913Z","iopub.status.busy":"2025-10-08T15:53:47.073589Z","iopub.status.idle":"2025-10-08T15:53:47.089102Z","shell.execute_reply":"2025-10-08T15:53:47.088077Z"},"papermill":{"duration":0.029495,"end_time":"2025-10-08T15:53:47.090394","exception":false,"start_time":"2025-10-08T15:53:47.060899","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>airline</th>\n","      <th>flight</th>\n","      <th>source</th>\n","      <th>departure</th>\n","      <th>stops</th>\n","      <th>arrival</th>\n","      <th>destination</th>\n","      <th>class</th>\n","      <th>duration</th>\n","      <th>days_left</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Vistara</td>\n","      <td>UK-816</td>\n","      <td>Bangalore</td>\n","      <td>Morning</td>\n","      <td>zero</td>\n","      <td>Afternoon</td>\n","      <td>Delhi</td>\n","      <td>Economy</td>\n","      <td>2.670000</td>\n","      <td>18.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Air_India</td>\n","      <td>AI-440</td>\n","      <td>Chennai</td>\n","      <td>Early_Morning</td>\n","      <td>zero</td>\n","      <td>Morning</td>\n","      <td>Delhi</td>\n","      <td>Economy</td>\n","      <td>12.004088</td>\n","      <td>5.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>SpiceJet</td>\n","      <td>SG-8938</td>\n","      <td>Delhi</td>\n","      <td>Evening</td>\n","      <td>one</td>\n","      <td>Evening</td>\n","      <td>Bangalore</td>\n","      <td>Economy</td>\n","      <td>12.004088</td>\n","      <td>44.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Vistara</td>\n","      <td>UK-838</td>\n","      <td>Chennai</td>\n","      <td>Night</td>\n","      <td>one</td>\n","      <td>Evening</td>\n","      <td>Kolkata</td>\n","      <td>Business</td>\n","      <td>21.000000</td>\n","      <td>26.000000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Air_India</td>\n","      <td>AI-429</td>\n","      <td>Delhi</td>\n","      <td>Morning</td>\n","      <td>one</td>\n","      <td>Evening</td>\n","      <td>Mumbai</td>\n","      <td>Business</td>\n","      <td>7.250000</td>\n","      <td>22.000000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9995</th>\n","      <td>9995</td>\n","      <td>Air_India</td>\n","      <td>AI-839</td>\n","      <td>Delhi</td>\n","      <td>Night</td>\n","      <td>one</td>\n","      <td>Early_Morning</td>\n","      <td>Chennai</td>\n","      <td>Economy</td>\n","      <td>10.580000</td>\n","      <td>23.000000</td>\n","    </tr>\n","    <tr>\n","      <th>9996</th>\n","      <td>9996</td>\n","      <td>Air_India</td>\n","      <td>AI-663</td>\n","      <td>Mumbai</td>\n","      <td>Afternoon</td>\n","      <td>one</td>\n","      <td>Night</td>\n","      <td>Hyderabad</td>\n","      <td>Economy</td>\n","      <td>7.670000</td>\n","      <td>26.197936</td>\n","    </tr>\n","    <tr>\n","      <th>9997</th>\n","      <td>9997</td>\n","      <td>Vistara</td>\n","      <td>UK-836</td>\n","      <td>Chennai</td>\n","      <td>Morning</td>\n","      <td>one</td>\n","      <td>Night</td>\n","      <td>Hyderabad</td>\n","      <td>Business</td>\n","      <td>10.170000</td>\n","      <td>24.000000</td>\n","    </tr>\n","    <tr>\n","      <th>9998</th>\n","      <td>9998</td>\n","      <td>Air_India</td>\n","      <td>AI-541</td>\n","      <td>Hyderabad</td>\n","      <td>Evening</td>\n","      <td>one</td>\n","      <td>Morning</td>\n","      <td>Bangalore</td>\n","      <td>Business</td>\n","      <td>16.670000</td>\n","      <td>49.000000</td>\n","    </tr>\n","    <tr>\n","      <th>9999</th>\n","      <td>9999</td>\n","      <td>Vistara</td>\n","      <td>UK-860</td>\n","      <td>Hyderabad</td>\n","      <td>Early_Morning</td>\n","      <td>one</td>\n","      <td>Night</td>\n","      <td>Mumbai</td>\n","      <td>Business</td>\n","      <td>17.000000</td>\n","      <td>7.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10000 rows × 11 columns</p>\n","</div>"],"text/plain":["        id    airline   flight     source      departure stops        arrival  \\\n","0        0    Vistara   UK-816  Bangalore        Morning  zero      Afternoon   \n","1        1  Air_India   AI-440    Chennai  Early_Morning  zero        Morning   \n","2        2   SpiceJet  SG-8938      Delhi        Evening   one        Evening   \n","3        3    Vistara   UK-838    Chennai          Night   one        Evening   \n","4        4  Air_India   AI-429      Delhi        Morning   one        Evening   \n","...    ...        ...      ...        ...            ...   ...            ...   \n","9995  9995  Air_India   AI-839      Delhi          Night   one  Early_Morning   \n","9996  9996  Air_India   AI-663     Mumbai      Afternoon   one          Night   \n","9997  9997    Vistara   UK-836    Chennai        Morning   one          Night   \n","9998  9998  Air_India   AI-541  Hyderabad        Evening   one        Morning   \n","9999  9999    Vistara   UK-860  Hyderabad  Early_Morning   one          Night   \n","\n","     destination     class   duration  days_left  \n","0          Delhi   Economy   2.670000  18.000000  \n","1          Delhi   Economy  12.004088   5.000000  \n","2      Bangalore   Economy  12.004088  44.000000  \n","3        Kolkata  Business  21.000000  26.000000  \n","4         Mumbai  Business   7.250000  22.000000  \n","...          ...       ...        ...        ...  \n","9995     Chennai   Economy  10.580000  23.000000  \n","9996   Hyderabad   Economy   7.670000  26.197936  \n","9997   Hyderabad  Business  10.170000  24.000000  \n","9998   Bangalore  Business  16.670000  49.000000  \n","9999      Mumbai  Business  17.000000   7.000000  \n","\n","[10000 rows x 11 columns]"]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["original_order = test_df.columns\n","test_df_t.reindex(columns=original_order)"]},{"cell_type":"markdown","id":"17874ba5","metadata":{"papermill":{"duration":0.011621,"end_time":"2025-10-08T15:53:47.114146","exception":false,"start_time":"2025-10-08T15:53:47.102525","status":"completed"},"tags":[]},"source":["# Identifying Duplicates"]},{"cell_type":"code","execution_count":22,"id":"a8d27721","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:47.139051Z","iopub.status.busy":"2025-10-08T15:53:47.138756Z","iopub.status.idle":"2025-10-08T15:53:47.170518Z","shell.execute_reply":"2025-10-08T15:53:47.169608Z"},"papermill":{"duration":0.045929,"end_time":"2025-10-08T15:53:47.171922","exception":false,"start_time":"2025-10-08T15:53:47.125993","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Duplicate Rows: 0\n"]}],"source":["# Check total duplicates in train dataset\n","duplicate_rows = train_df_t[train_df_t.duplicated()]\n","print(\"Duplicate Rows:\", duplicate_rows.shape[0])"]},{"cell_type":"code","execution_count":23,"id":"6b25b0c3","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:47.197253Z","iopub.status.busy":"2025-10-08T15:53:47.196982Z","iopub.status.idle":"2025-10-08T15:53:47.209429Z","shell.execute_reply":"2025-10-08T15:53:47.208554Z"},"papermill":{"duration":0.026256,"end_time":"2025-10-08T15:53:47.210651","exception":false,"start_time":"2025-10-08T15:53:47.184395","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Duplicate Rows: 0\n"]}],"source":["# Check total duplicates in test dataset\n","duplicate_rows = test_df_t[test_df_t.duplicated()]\n","print(\"Duplicate Rows:\", duplicate_rows.shape[0])"]},{"cell_type":"markdown","id":"82bf8c2a","metadata":{"papermill":{"duration":0.012119,"end_time":"2025-10-08T15:53:47.235101","exception":false,"start_time":"2025-10-08T15:53:47.222982","status":"completed"},"tags":[]},"source":["# Identifying and handling outliers"]},{"cell_type":"code","execution_count":24,"id":"b344ac86","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:47.260779Z","iopub.status.busy":"2025-10-08T15:53:47.260459Z","iopub.status.idle":"2025-10-08T15:53:47.815011Z","shell.execute_reply":"2025-10-08T15:53:47.814344Z"},"papermill":{"duration":0.569526,"end_time":"2025-10-08T15:53:47.816699","exception":false,"start_time":"2025-10-08T15:53:47.247173","status":"completed"},"tags":[]},"outputs":[],"source":["import seaborn as sns\n","import matplotlib.pyplot as plt"]},{"cell_type":"markdown","id":"009e1386","metadata":{"papermill":{"duration":0.011731,"end_time":"2025-10-08T15:53:47.841248","exception":false,"start_time":"2025-10-08T15:53:47.829517","status":"completed"},"tags":[]},"source":["### Train Dataset"]},{"cell_type":"code","execution_count":25,"id":"ecfbd8c9","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:47.866706Z","iopub.status.busy":"2025-10-08T15:53:47.866232Z","iopub.status.idle":"2025-10-08T15:53:48.21276Z","shell.execute_reply":"2025-10-08T15:53:48.211955Z"},"papermill":{"duration":0.360827,"end_time":"2025-10-08T15:53:48.214072","exception":false,"start_time":"2025-10-08T15:53:47.853245","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 600x100 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"\n","text/plain":["<Figure size 600x100 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"\n","text/plain":["<Figure size 600x100 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["numerical_cols = train_df_t.select_dtypes(include=['int64', 'float64'])\n","\n","for col in numerical_cols:\n","    plt.figure(figsize=(6, 1))\n","    sns.boxplot(x=train_df_t[col])\n","    plt.title(f'Outliers in {col}')\n","    plt.show()"]},{"cell_type":"code","execution_count":26,"id":"2fe49ad9","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:48.241714Z","iopub.status.busy":"2025-10-08T15:53:48.241007Z","iopub.status.idle":"2025-10-08T15:53:48.251888Z","shell.execute_reply":"2025-10-08T15:53:48.250909Z"},"papermill":{"duration":0.025986,"end_time":"2025-10-08T15:53:48.253123","exception":false,"start_time":"2025-10-08T15:53:48.227137","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Outliers: 470\n","Total: 40000\n","1.175 %\n"]}],"source":["Q1 = train_df_t['duration'].quantile(0.25)\n","Q3 = train_df_t['duration'].quantile(0.75)\n","IQR = Q3 - Q1\n","lower = Q1 - 1.5 * IQR\n","upper = Q3 + 1.5 * IQR\n","\n","outliers = train_df_t[(train_df_t['duration'] < lower) | (train_df_t['duration'] > upper)]\n","print(\"Outliers:\", outliers.shape[0])\n","print(\"Total:\", train_df_t.shape[0])\n","print(f\"{(outliers.shape[0]/train_df_t.shape[0])*100} %\")"]},{"cell_type":"code","execution_count":27,"id":"94937aa1","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:48.281582Z","iopub.status.busy":"2025-10-08T15:53:48.28092Z","iopub.status.idle":"2025-10-08T15:53:48.290945Z","shell.execute_reply":"2025-10-08T15:53:48.29003Z"},"papermill":{"duration":0.025349,"end_time":"2025-10-08T15:53:48.292235","exception":false,"start_time":"2025-10-08T15:53:48.266886","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Capped\n"]}],"source":["def cap_outliers_iqr(df, col):\n","    Q1 = df[col].quantile(0.25)\n","    Q3 = df[col].quantile(0.75)\n","    IQR = Q3 - Q1\n","    lower = Q1 - 1.5 * IQR\n","    upper = Q3 + 1.5 * IQR\n","    df[col] = np.where(df[col] > upper, upper,\n","                np.where(df[col] < lower, lower, df[col]))\n","    print('Capped')\n","    return df\n","\n","train_df_t = cap_outliers_iqr(train_df_t, 'duration')"]},{"cell_type":"code","execution_count":28,"id":"bf4d15f7","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:48.319201Z","iopub.status.busy":"2025-10-08T15:53:48.318901Z","iopub.status.idle":"2025-10-08T15:53:48.424524Z","shell.execute_reply":"2025-10-08T15:53:48.423615Z"},"papermill":{"duration":0.120344,"end_time":"2025-10-08T15:53:48.425871","exception":false,"start_time":"2025-10-08T15:53:48.305527","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["sns.boxplot(x=train_df_t['duration'])\n","plt.title(\"Outliers in Duration\")\n","plt.show()"]},{"cell_type":"markdown","id":"f3ed162c","metadata":{"papermill":{"duration":0.01315,"end_time":"2025-10-08T15:53:48.452494","exception":false,"start_time":"2025-10-08T15:53:48.439344","status":"completed"},"tags":[]},"source":["### Test Dataset"]},{"cell_type":"code","execution_count":29,"id":"0010eec2","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:48.481102Z","iopub.status.busy":"2025-10-08T15:53:48.48081Z","iopub.status.idle":"2025-10-08T15:53:48.748904Z","shell.execute_reply":"2025-10-08T15:53:48.748115Z"},"papermill":{"duration":0.284061,"end_time":"2025-10-08T15:53:48.750155","exception":false,"start_time":"2025-10-08T15:53:48.466094","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 600x100 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"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\n","text/plain":["<Figure size 600x100 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"data":{"image/png":"\n","text/plain":["<Figure size 600x100 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["numerical_cols = test_df_t.select_dtypes(include=['int64', 'float64'])\n","\n","for col in numerical_cols:\n","    plt.figure(figsize=(6, 1))\n","    sns.boxplot(x=test_df_t[col])\n","    plt.title(f'Outliers in {col}')\n","    plt.show()"]},{"cell_type":"code","execution_count":30,"id":"5ec9cbfc","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:48.779508Z","iopub.status.busy":"2025-10-08T15:53:48.778925Z","iopub.status.idle":"2025-10-08T15:53:48.788704Z","shell.execute_reply":"2025-10-08T15:53:48.787519Z"},"papermill":{"duration":0.025651,"end_time":"2025-10-08T15:53:48.790027","exception":false,"start_time":"2025-10-08T15:53:48.764376","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Outliers: 81\n","Total: 10000\n","0.8099999999999999 %\n"]}],"source":["Q1 = test_df_t['duration'].quantile(0.25)\n","Q3 = test_df_t['duration'].quantile(0.75)\n","IQR = Q3 - Q1\n","lower = Q1 - 1.5 * IQR\n","upper = Q3 + 1.5 * IQR\n","\n","outliers = test_df_t[(test_df_t['duration'] < lower) | (test_df_t['duration'] > upper)]\n","print(\"Outliers:\", outliers.shape[0])\n","print(\"Total:\", test_df_t.shape[0])\n","print(f\"{(outliers.shape[0]/test_df_t.shape[0])*100} %\")"]},{"cell_type":"code","execution_count":31,"id":"648f26a8","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:48.818606Z","iopub.status.busy":"2025-10-08T15:53:48.818107Z","iopub.status.idle":"2025-10-08T15:53:48.826242Z","shell.execute_reply":"2025-10-08T15:53:48.825345Z"},"papermill":{"duration":0.023919,"end_time":"2025-10-08T15:53:48.82762","exception":false,"start_time":"2025-10-08T15:53:48.803701","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Capped\n"]}],"source":["def cap_outliers_iqr(df, col):\n","    Q1 = df[col].quantile(0.25)\n","    Q3 = df[col].quantile(0.75)\n","    IQR = Q3 - Q1\n","    lower = Q1 - 1.5 * IQR\n","    upper = Q3 + 1.5 * IQR\n","    df[col] = np.where(df[col] > upper, upper,\n","                np.where(df[col] < lower, lower, df[col]))\n","    print('Capped')\n","    return df\n","\n","test_df_t = cap_outliers_iqr(test_df_t, 'duration')"]},{"cell_type":"code","execution_count":32,"id":"2e6f80f0","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:48.85654Z","iopub.status.busy":"2025-10-08T15:53:48.856197Z","iopub.status.idle":"2025-10-08T15:53:48.954453Z","shell.execute_reply":"2025-10-08T15:53:48.95356Z"},"papermill":{"duration":0.114331,"end_time":"2025-10-08T15:53:48.955857","exception":false,"start_time":"2025-10-08T15:53:48.841526","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["sns.boxplot(x=test_df_t['duration'])\n","plt.title(\"Outliers in Duration\")\n","plt.show()"]},{"cell_type":"markdown","id":"af251eda","metadata":{"papermill":{"duration":0.013882,"end_time":"2025-10-08T15:53:48.984004","exception":false,"start_time":"2025-10-08T15:53:48.970122","status":"completed"},"tags":[]},"source":["### Outliers checking in Target"]},{"cell_type":"code","execution_count":33,"id":"ea752af2","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:49.013328Z","iopub.status.busy":"2025-10-08T15:53:49.013Z","iopub.status.idle":"2025-10-08T15:53:49.120464Z","shell.execute_reply":"2025-10-08T15:53:49.119572Z"},"papermill":{"duration":0.123999,"end_time":"2025-10-08T15:53:49.121911","exception":false,"start_time":"2025-10-08T15:53:48.997912","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["sns.boxplot(x=y_train)\n","plt.title(\"Outliers in Price\")\n","plt.show()"]},{"cell_type":"code","execution_count":34,"id":"993aa9db","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:49.151655Z","iopub.status.busy":"2025-10-08T15:53:49.151125Z","iopub.status.idle":"2025-10-08T15:53:49.611825Z","shell.execute_reply":"2025-10-08T15:53:49.610989Z"},"papermill":{"duration":0.476955,"end_time":"2025-10-08T15:53:49.613147","exception":false,"start_time":"2025-10-08T15:53:49.136192","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n","  with pd.option_context('mode.use_inf_as_na', True):\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["Skewness: 1.0627407993804707\n"]}],"source":["sns.histplot(y_train, kde=True)\n","plt.title(\"Before Log Transform\")\n","plt.show()\n","\n","print(\"Skewness:\", y_train.skew())"]},{"cell_type":"code","execution_count":35,"id":"f0c80d8a","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:49.649703Z","iopub.status.busy":"2025-10-08T15:53:49.649078Z","iopub.status.idle":"2025-10-08T15:53:49.660499Z","shell.execute_reply":"2025-10-08T15:53:49.659805Z"},"papermill":{"duration":0.032729,"end_time":"2025-10-08T15:53:49.661735","exception":false,"start_time":"2025-10-08T15:53:49.629006","status":"completed"},"tags":[]},"outputs":[],"source":["y_train = np.log1p(y_train)  # log(1 + Price)"]},{"cell_type":"code","execution_count":36,"id":"5dbd15ec","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:49.692069Z","iopub.status.busy":"2025-10-08T15:53:49.691806Z","iopub.status.idle":"2025-10-08T15:53:49.702063Z","shell.execute_reply":"2025-10-08T15:53:49.70125Z"},"papermill":{"duration":0.026837,"end_time":"2025-10-08T15:53:49.703501","exception":false,"start_time":"2025-10-08T15:53:49.676664","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["         airline      departure stops   duration  days_left     id    flight  \\\n","0        Vistara  Early_Morning   one  12.004088  40.000000      0    UK-930   \n","1      Air_India        Evening   one  16.080000  26.000000      1    AI-539   \n","2       SpiceJet  Early_Morning  zero   2.920000  25.000000      2   SG-8107   \n","3        Vistara  Early_Morning  zero   1.500000  22.000000      3  0.00E+00   \n","4      Air_India  Early_Morning   one   4.830000  20.000000      4    AI-569   \n","...          ...            ...   ...        ...        ...    ...       ...   \n","39995    Vistara        Morning   one  21.250000  43.000000  39995    UK-940   \n","39996    Vistara  Early_Morning   one  14.080000  12.000000  39996    UK-720   \n","39997    Vistara        Morning   one  14.330000  26.197936  39997    UK-874   \n","39998    Vistara        Morning   one  24.670000   4.000000  39998    UK-940   \n","39999   GO_FIRST  Early_Morning   one  14.330000  26.197936  39999    G8-511   \n","\n","          source  arrival destination     class  \n","0         Mumbai    Night     Chennai  Business  \n","1        Chennai  Morning      Mumbai   Economy  \n","2          Delhi  Morning     Chennai   Economy  \n","3      Hyderabad  Morning   Bangalore   Economy  \n","4        Chennai  Morning   Bangalore   Economy  \n","...          ...      ...         ...       ...  \n","39995     Mumbai  Evening   Bangalore   Economy  \n","39996    Kolkata    Night      Mumbai  Business  \n","39997  Hyderabad    Night   Bangalore   Economy  \n","39998     Mumbai    Night   Bangalore  Business  \n","39999     Mumbai  Evening   Bangalore   Economy  \n","\n","[40000 rows x 11 columns] 0        11.069353\n","1         8.379769\n","2         8.087025\n","3         7.482682\n","4         8.184514\n","           ...    \n","39995     8.771990\n","39996    11.079555\n","39997     8.995041\n","39998    11.345193\n","39999     8.537584\n","Name: price, Length: 40000, dtype: float64\n"]}],"source":["X = train_df_t\n","y = y_train\n","print(X, y)"]},{"cell_type":"markdown","id":"f15262a7","metadata":{"papermill":{"duration":0.015046,"end_time":"2025-10-08T15:53:49.73387","exception":false,"start_time":"2025-10-08T15:53:49.718824","status":"completed"},"tags":[]},"source":["# Visualizations and Graphs with main data set"]},{"cell_type":"code","execution_count":37,"id":"d5116584","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:49.765079Z","iopub.status.busy":"2025-10-08T15:53:49.764753Z","iopub.status.idle":"2025-10-08T15:53:49.973163Z","shell.execute_reply":"2025-10-08T15:53:49.972478Z"},"papermill":{"duration":0.225849,"end_time":"2025-10-08T15:53:49.974618","exception":false,"start_time":"2025-10-08T15:53:49.748769","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["avg_price_by_source = train_df.groupby('source')['price'].mean().sort_values()\n","avg_price_by_source.plot(kind='bar', color='skyblue')\n","plt.title(\"Average Price by Source City\")\n","plt.ylabel(\"Average Ticket Price\")\n","plt.xlabel(\"Source\")\n","plt.show()"]},{"cell_type":"code","execution_count":38,"id":"d33c392c","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:50.007425Z","iopub.status.busy":"2025-10-08T15:53:50.007107Z","iopub.status.idle":"2025-10-08T15:53:50.245056Z","shell.execute_reply":"2025-10-08T15:53:50.244093Z"},"papermill":{"duration":0.255728,"end_time":"2025-10-08T15:53:50.246471","exception":false,"start_time":"2025-10-08T15:53:49.990743","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 1200x600 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","plt.figure(figsize=(12, 6))\n","sns.boxplot(x='airline', y='price', data=train_df)\n","plt.xticks(rotation=45)\n","plt.title(\"Ticket Price Distribution by Airline\")\n","plt.show()"]},{"cell_type":"code","execution_count":39,"id":"3854290c","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:50.282184Z","iopub.status.busy":"2025-10-08T15:53:50.281928Z","iopub.status.idle":"2025-10-08T15:53:50.444424Z","shell.execute_reply":"2025-10-08T15:53:50.443534Z"},"papermill":{"duration":0.181855,"end_time":"2025-10-08T15:53:50.44594","exception":false,"start_time":"2025-10-08T15:53:50.264085","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 600x400 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.figure(figsize=(6, 4))\n","sns.boxplot(x='class', y='price', data=train_df, palette='Set2')\n","plt.title(\"Price Variation by Travel Class\")\n","plt.show()"]},{"cell_type":"code","execution_count":40,"id":"f65953f6","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:50.481513Z","iopub.status.busy":"2025-10-08T15:53:50.481195Z","iopub.status.idle":"2025-10-08T15:53:50.653474Z","shell.execute_reply":"2025-10-08T15:53:50.652643Z"},"papermill":{"duration":0.191705,"end_time":"2025-10-08T15:53:50.654873","exception":false,"start_time":"2025-10-08T15:53:50.463168","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 800x500 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["plt.figure(figsize=(8, 5))\n","sns.boxplot(x='stops', y='price', data=train_df, palette='Set3')\n","plt.title(\"Flight Price vs Number of Stops\")\n","plt.show()"]},{"cell_type":"code","execution_count":41,"id":"cbf20575","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:50.692423Z","iopub.status.busy":"2025-10-08T15:53:50.69209Z","iopub.status.idle":"2025-10-08T15:53:50.905982Z","shell.execute_reply":"2025-10-08T15:53:50.905085Z"},"papermill":{"duration":0.233881,"end_time":"2025-10-08T15:53:50.907617","exception":false,"start_time":"2025-10-08T15:53:50.673736","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n","  with pd.option_context('mode.use_inf_as_na', True):\n","/usr/local/lib/python3.11/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n","  with pd.option_context('mode.use_inf_as_na', True):\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 1000x500 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Group by days_left and calculate average price\n","days_price = train_df.groupby('days_left')['price'].mean().reset_index()\n","\n","# Plot line chart\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","plt.figure(figsize=(10, 5))\n","sns.lineplot(x='days_left', y='price', data=days_price, marker='o', color='blue')\n","plt.title(\"Days Left vs Average Ticket Price\")\n","plt.xlabel(\"Days Left to Departure\")\n","plt.ylabel(\"Average Price (₹)\")\n","plt.grid(True)\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","id":"8b7e37df","metadata":{"papermill":{"duration":0.018517,"end_time":"2025-10-08T15:53:50.945346","exception":false,"start_time":"2025-10-08T15:53:50.926829","status":"completed"},"tags":[]},"source":["# Scale Numerical features and Encode Categorical features"]},{"cell_type":"code","execution_count":42,"id":"bdb15a58","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:50.984146Z","iopub.status.busy":"2025-10-08T15:53:50.983566Z","iopub.status.idle":"2025-10-08T15:53:50.999752Z","shell.execute_reply":"2025-10-08T15:53:50.999075Z"},"papermill":{"duration":0.03709,"end_time":"2025-10-08T15:53:51.001106","exception":false,"start_time":"2025-10-08T15:53:50.964016","status":"completed"},"tags":[]},"outputs":[],"source":["num_cols = X.select_dtypes(include=['int64', 'float64']).drop(columns='id', errors='ignore').columns\n","cat_cols = X.select_dtypes(include=['object']).columns"]},{"cell_type":"code","execution_count":43,"id":"fa3b6dc9","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:51.040248Z","iopub.status.busy":"2025-10-08T15:53:51.039745Z","iopub.status.idle":"2025-10-08T15:53:51.044454Z","shell.execute_reply":"2025-10-08T15:53:51.043596Z"},"papermill":{"duration":0.025314,"end_time":"2025-10-08T15:53:51.045789","exception":false,"start_time":"2025-10-08T15:53:51.020475","status":"completed"},"tags":[]},"outputs":[],"source":["from sklearn.compose import ColumnTransformer\n","from sklearn.preprocessing import StandardScaler, OneHotEncoder\n","\n","preprocessor = ColumnTransformer(transformers=[\n","    ('num', StandardScaler(), num_cols),\n","    ('cat', OneHotEncoder(handle_unknown='ignore'), cat_cols)\n","], verbose_feature_names_out=False)"]},{"cell_type":"markdown","id":"334e62d1","metadata":{"papermill":{"duration":0.018463,"end_time":"2025-10-08T15:53:51.082587","exception":false,"start_time":"2025-10-08T15:53:51.064124","status":"completed"},"tags":[]},"source":["# Model Building"]},{"cell_type":"code","execution_count":44,"id":"050ca152","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:51.120853Z","iopub.status.busy":"2025-10-08T15:53:51.120544Z","iopub.status.idle":"2025-10-08T15:53:51.136327Z","shell.execute_reply":"2025-10-08T15:53:51.135605Z"},"papermill":{"duration":0.036932,"end_time":"2025-10-08T15:53:51.13802","exception":false,"start_time":"2025-10-08T15:53:51.101088","status":"completed"},"tags":[]},"outputs":[],"source":["from sklearn.model_selection import train_test_split, cross_val_score\n","\n","X = train_df_t.drop(['id'], axis=1)\n","y = y_train\n","\n","X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)"]},{"cell_type":"markdown","id":"0df800a3","metadata":{"papermill":{"duration":0.018477,"end_time":"2025-10-08T15:53:51.175741","exception":false,"start_time":"2025-10-08T15:53:51.157264","status":"completed"},"tags":[]},"source":["### 1. Linear Regression"]},{"cell_type":"code","execution_count":45,"id":"7d0c5be6","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:51.213263Z","iopub.status.busy":"2025-10-08T15:53:51.212975Z","iopub.status.idle":"2025-10-08T15:53:51.752614Z","shell.execute_reply":"2025-10-08T15:53:51.751615Z"},"papermill":{"duration":0.559885,"end_time":"2025-10-08T15:53:51.753914","exception":false,"start_time":"2025-10-08T15:53:51.194029","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Linear Regression: R2 Score = 0.9247\n"]}],"source":["from sklearn.pipeline import Pipeline\n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import r2_score\n","\n","pipeline_lr = Pipeline(steps=[\n","    ('preprocessor', preprocessor),\n","    ('model', LinearRegression())\n","])\n","\n","pipeline_lr.fit(X, y)\n","pred_lr = pipeline_lr.predict(X_val)\n","score_lr = r2_score(y_val, pred_lr)\n","print(f\"Linear Regression: R2 Score = {score_lr:.4f}\")"]},{"cell_type":"markdown","id":"4dc3f594","metadata":{"papermill":{"duration":0.018296,"end_time":"2025-10-08T15:53:51.790885","exception":false,"start_time":"2025-10-08T15:53:51.772589","status":"completed"},"tags":[]},"source":["### 2.  Decision Tree Regressor"]},{"cell_type":"code","execution_count":46,"id":"ceff4ce2","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:51.827886Z","iopub.status.busy":"2025-10-08T15:53:51.827584Z","iopub.status.idle":"2025-10-08T15:53:56.148455Z","shell.execute_reply":"2025-10-08T15:53:56.147482Z"},"papermill":{"duration":4.340589,"end_time":"2025-10-08T15:53:56.14977","exception":false,"start_time":"2025-10-08T15:53:51.809181","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Decision Tree: R2 Score = 0.9990\n"]}],"source":["from sklearn.tree import DecisionTreeRegressor\n","\n","pipeline_dt = Pipeline(steps=[\n","    ('preprocessor', preprocessor),\n","    ('model', DecisionTreeRegressor())\n","])\n","\n","pipeline_dt.fit(X, y)\n","pred_dt = pipeline_dt.predict(X_val)\n","score_dt = r2_score(y_val, pred_dt)\n","print(f\"Decision Tree: R2 Score = {score_dt:.4f}\")"]},{"cell_type":"markdown","id":"de9578e8","metadata":{"papermill":{"duration":0.018121,"end_time":"2025-10-08T15:53:56.186649","exception":false,"start_time":"2025-10-08T15:53:56.168528","status":"completed"},"tags":[]},"source":["### 3. K Neighbors Regressor"]},{"cell_type":"code","execution_count":47,"id":"a2574f97","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:53:56.224433Z","iopub.status.busy":"2025-10-08T15:53:56.22411Z","iopub.status.idle":"2025-10-08T15:54:14.616599Z","shell.execute_reply":"2025-10-08T15:54:14.614949Z"},"papermill":{"duration":18.41374,"end_time":"2025-10-08T15:54:14.618321","exception":false,"start_time":"2025-10-08T15:53:56.204581","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["KNN Regressor: R2 Score = 0.9317\n"]}],"source":["from sklearn.neighbors import KNeighborsRegressor\n","\n","pipeline_knn = Pipeline(steps=[\n","    ('preprocessor', preprocessor),\n","    ('model', KNeighborsRegressor())\n","])\n","\n","pipeline_knn.fit(X, y)\n","pred_knn = pipeline_knn.predict(X_val)\n","score_knn = r2_score(y_val, pred_knn)\n","print(f\"KNN Regressor: R2 Score = {score_knn:.4f}\")"]},{"cell_type":"markdown","id":"def082ce","metadata":{"papermill":{"duration":0.018319,"end_time":"2025-10-08T15:54:14.658425","exception":false,"start_time":"2025-10-08T15:54:14.640106","status":"completed"},"tags":[]},"source":["### 4. XGB Regressor"]},{"cell_type":"code","execution_count":48,"id":"a9535add","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:54:14.697703Z","iopub.status.busy":"2025-10-08T15:54:14.697408Z","iopub.status.idle":"2025-10-08T15:54:15.483848Z","shell.execute_reply":"2025-10-08T15:54:15.482096Z"},"papermill":{"duration":0.808144,"end_time":"2025-10-08T15:54:15.485336","exception":false,"start_time":"2025-10-08T15:54:14.677192","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["XGBoost: R2 Score = 0.9622\n"]}],"source":["from xgboost import XGBRegressor\n","\n","pipeline_xgb = Pipeline(steps=[\n","    ('preprocessor', preprocessor),\n","    ('model', XGBRegressor())\n","])\n","\n","pipeline_xgb.fit(X, y)\n","pred_xgb = pipeline_xgb.predict(X_val)\n","score_xgb = r2_score(y_val, pred_xgb)\n","print(f\"XGBoost: R2 Score = {score_xgb:.4f}\")"]},{"cell_type":"markdown","id":"b2527090","metadata":{"papermill":{"duration":0.018295,"end_time":"2025-10-08T15:54:15.526095","exception":false,"start_time":"2025-10-08T15:54:15.5078","status":"completed"},"tags":[]},"source":["## With Hyperparameter Tuning"]},{"cell_type":"code","execution_count":49,"id":"4ed95cf5","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:54:15.564753Z","iopub.status.busy":"2025-10-08T15:54:15.564406Z","iopub.status.idle":"2025-10-08T15:54:15.574238Z","shell.execute_reply":"2025-10-08T15:54:15.573631Z"},"papermill":{"duration":0.030692,"end_time":"2025-10-08T15:54:15.575586","exception":false,"start_time":"2025-10-08T15:54:15.544894","status":"completed"},"tags":[]},"outputs":[],"source":["from sklearn.model_selection import RandomizedSearchCV\n","from sklearn.pipeline import Pipeline\n","from sklearn.metrics import r2_score\n","\n","# 30% sample for tuning\n","X_sample = X.sample(frac=0.3, random_state=42)\n","y_sample = y.loc[X_sample.index]"]},{"cell_type":"markdown","id":"23c30c6d","metadata":{"papermill":{"duration":0.018498,"end_time":"2025-10-08T15:54:15.613023","exception":false,"start_time":"2025-10-08T15:54:15.594525","status":"completed"},"tags":[]},"source":["### 5. Decision Tree Regressor with tuning"]},{"cell_type":"code","execution_count":50,"id":"a4b55d26","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:54:15.651184Z","iopub.status.busy":"2025-10-08T15:54:15.65089Z","iopub.status.idle":"2025-10-08T15:54:18.854026Z","shell.execute_reply":"2025-10-08T15:54:18.853227Z"},"papermill":{"duration":3.22391,"end_time":"2025-10-08T15:54:18.855362","exception":false,"start_time":"2025-10-08T15:54:15.631452","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Decision Tree Best: {'model__min_samples_split': 5, 'model__max_depth': 10}\n","Score (30% CV): 0.9390932639582242\n"]},{"data":{"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,\n","                 ColumnTransformer(transformers=[(&#x27;num&#x27;, StandardScaler(),\n","                                                  Index([&#x27;duration&#x27;, &#x27;days_left&#x27;], dtype=&#x27;object&#x27;)),\n","                                                 (&#x27;cat&#x27;,\n","                                                  OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n","                                                  Index([&#x27;airline&#x27;, &#x27;departure&#x27;, &#x27;stops&#x27;, &#x27;flight&#x27;, &#x27;source&#x27;, &#x27;arrival&#x27;,\n","       &#x27;destination&#x27;, &#x27;class&#x27;],\n","      dtype=&#x27;object&#x27;))],\n","                                   verbose_feature_names_out=False)),\n","                (&#x27;model&#x27;,\n","                 DecisionTreeRegressor(max_depth=10, min_samples_split=5))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,\n","                 ColumnTransformer(transformers=[(&#x27;num&#x27;, StandardScaler(),\n","                                                  Index([&#x27;duration&#x27;, &#x27;days_left&#x27;], dtype=&#x27;object&#x27;)),\n","                                                 (&#x27;cat&#x27;,\n","                                                  OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n","                                                  Index([&#x27;airline&#x27;, &#x27;departure&#x27;, &#x27;stops&#x27;, &#x27;flight&#x27;, &#x27;source&#x27;, &#x27;arrival&#x27;,\n","       &#x27;destination&#x27;, &#x27;class&#x27;],\n","      dtype=&#x27;object&#x27;))],\n","                                   verbose_feature_names_out=False)),\n","                (&#x27;model&#x27;,\n","                 DecisionTreeRegressor(max_depth=10, min_samples_split=5))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">preprocessor: ColumnTransformer</label><div class=\"sk-toggleable__content\"><pre>ColumnTransformer(transformers=[(&#x27;num&#x27;, StandardScaler(),\n","                                 Index([&#x27;duration&#x27;, &#x27;days_left&#x27;], dtype=&#x27;object&#x27;)),\n","                                (&#x27;cat&#x27;, OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n","                                 Index([&#x27;airline&#x27;, &#x27;departure&#x27;, &#x27;stops&#x27;, &#x27;flight&#x27;, &#x27;source&#x27;, &#x27;arrival&#x27;,\n","       &#x27;destination&#x27;, &#x27;class&#x27;],\n","      dtype=&#x27;object&#x27;))],\n","                  verbose_feature_names_out=False)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">num</label><div class=\"sk-toggleable__content\"><pre>Index([&#x27;duration&#x27;, &#x27;days_left&#x27;], dtype=&#x27;object&#x27;)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" ><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">StandardScaler</label><div class=\"sk-toggleable__content\"><pre>StandardScaler()</pre></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" ><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">cat</label><div class=\"sk-toggleable__content\"><pre>Index([&#x27;airline&#x27;, &#x27;departure&#x27;, &#x27;stops&#x27;, &#x27;flight&#x27;, &#x27;source&#x27;, &#x27;arrival&#x27;,\n","       &#x27;destination&#x27;, &#x27;class&#x27;],\n","      dtype=&#x27;object&#x27;)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">OneHotEncoder</label><div class=\"sk-toggleable__content\"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" ><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DecisionTreeRegressor</label><div class=\"sk-toggleable__content\"><pre>DecisionTreeRegressor(max_depth=10, min_samples_split=5)</pre></div></div></div></div></div></div></div>"],"text/plain":["Pipeline(steps=[('preprocessor',\n","                 ColumnTransformer(transformers=[('num', StandardScaler(),\n","                                                  Index(['duration', 'days_left'], dtype='object')),\n","                                                 ('cat',\n","                                                  OneHotEncoder(handle_unknown='ignore'),\n","                                                  Index(['airline', 'departure', 'stops', 'flight', 'source', 'arrival',\n","       'destination', 'class'],\n","      dtype='object'))],\n","                                   verbose_feature_names_out=False)),\n","                ('model',\n","                 DecisionTreeRegressor(max_depth=10, min_samples_split=5))])"]},"execution_count":50,"metadata":{},"output_type":"execute_result"}],"source":["from sklearn.tree import DecisionTreeRegressor\n","\n","pipe_dt = Pipeline([\n","    ('preprocessor', preprocessor),\n","    ('model', DecisionTreeRegressor())\n","])\n","\n","params_dt = {\n","    'model__max_depth': [3, 5, 10],\n","    'model__min_samples_split': [2, 5]\n","}\n","\n","grid_dt = RandomizedSearchCV(pipe_dt, params_dt, n_iter=5, cv=3, scoring='r2', n_jobs=-1)\n","grid_dt.fit(X_sample, y_sample)\n","\n","print(\"Decision Tree Best:\", grid_dt.best_params_)\n","print(\"Score (30% CV):\", grid_dt.best_score_)\n","\n","best_dt = grid_dt.best_estimator_\n","best_dt.fit(X, y)"]},{"cell_type":"markdown","id":"d90d02db","metadata":{"papermill":{"duration":0.018381,"end_time":"2025-10-08T15:54:18.893458","exception":false,"start_time":"2025-10-08T15:54:18.875077","status":"completed"},"tags":[]},"source":["### 6. Random Forest Regressor with tuning"]},{"cell_type":"code","execution_count":51,"id":"0244872c","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:54:18.932281Z","iopub.status.busy":"2025-10-08T15:54:18.93199Z","iopub.status.idle":"2025-10-08T15:54:31.081229Z","shell.execute_reply":"2025-10-08T15:54:31.080459Z"},"papermill":{"duration":12.17083,"end_time":"2025-10-08T15:54:31.082797","exception":false,"start_time":"2025-10-08T15:54:18.911967","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Random Forest Best: {'model__n_estimators': 30, 'model__min_samples_split': 5, 'model__max_depth': 10}\n","Score (30% CV): 0.9460854162749014\n"]},{"data":{"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,\n","                 ColumnTransformer(transformers=[(&#x27;num&#x27;, StandardScaler(),\n","                                                  Index([&#x27;duration&#x27;, &#x27;days_left&#x27;], dtype=&#x27;object&#x27;)),\n","                                                 (&#x27;cat&#x27;,\n","                                                  OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n","                                                  Index([&#x27;airline&#x27;, &#x27;departure&#x27;, &#x27;stops&#x27;, &#x27;flight&#x27;, &#x27;source&#x27;, &#x27;arrival&#x27;,\n","       &#x27;destination&#x27;, &#x27;class&#x27;],\n","      dtype=&#x27;object&#x27;))],\n","                                   verbose_feature_names_out=False)),\n","                (&#x27;model&#x27;,\n","                 RandomForestRegressor(max_depth=10, min_samples_split=5,\n","                                       n_estimators=30, n_jobs=-1,\n","                                       random_state=42))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" ><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,\n","                 ColumnTransformer(transformers=[(&#x27;num&#x27;, StandardScaler(),\n","                                                  Index([&#x27;duration&#x27;, &#x27;days_left&#x27;], dtype=&#x27;object&#x27;)),\n","                                                 (&#x27;cat&#x27;,\n","                                                  OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n","                                                  Index([&#x27;airline&#x27;, &#x27;departure&#x27;, &#x27;stops&#x27;, &#x27;flight&#x27;, &#x27;source&#x27;, &#x27;arrival&#x27;,\n","       &#x27;destination&#x27;, &#x27;class&#x27;],\n","      dtype=&#x27;object&#x27;))],\n","                                   verbose_feature_names_out=False)),\n","                (&#x27;model&#x27;,\n","                 RandomForestRegressor(max_depth=10, min_samples_split=5,\n","                                       n_estimators=30, n_jobs=-1,\n","                                       random_state=42))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" ><label for=\"sk-estimator-id-9\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">preprocessor: ColumnTransformer</label><div class=\"sk-toggleable__content\"><pre>ColumnTransformer(transformers=[(&#x27;num&#x27;, StandardScaler(),\n","                                 Index([&#x27;duration&#x27;, &#x27;days_left&#x27;], dtype=&#x27;object&#x27;)),\n","                                (&#x27;cat&#x27;, OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n","                                 Index([&#x27;airline&#x27;, &#x27;departure&#x27;, &#x27;stops&#x27;, &#x27;flight&#x27;, &#x27;source&#x27;, &#x27;arrival&#x27;,\n","       &#x27;destination&#x27;, &#x27;class&#x27;],\n","      dtype=&#x27;object&#x27;))],\n","                  verbose_feature_names_out=False)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" ><label for=\"sk-estimator-id-10\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">num</label><div class=\"sk-toggleable__content\"><pre>Index([&#x27;duration&#x27;, &#x27;days_left&#x27;], dtype=&#x27;object&#x27;)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" ><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">StandardScaler</label><div class=\"sk-toggleable__content\"><pre>StandardScaler()</pre></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" ><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">cat</label><div class=\"sk-toggleable__content\"><pre>Index([&#x27;airline&#x27;, &#x27;departure&#x27;, &#x27;stops&#x27;, &#x27;flight&#x27;, &#x27;source&#x27;, &#x27;arrival&#x27;,\n","       &#x27;destination&#x27;, &#x27;class&#x27;],\n","      dtype=&#x27;object&#x27;)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-13\" type=\"checkbox\" ><label for=\"sk-estimator-id-13\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">OneHotEncoder</label><div class=\"sk-toggleable__content\"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-14\" type=\"checkbox\" ><label for=\"sk-estimator-id-14\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(max_depth=10, min_samples_split=5, n_estimators=30,\n","                      n_jobs=-1, random_state=42)</pre></div></div></div></div></div></div></div>"],"text/plain":["Pipeline(steps=[('preprocessor',\n","                 ColumnTransformer(transformers=[('num', StandardScaler(),\n","                                                  Index(['duration', 'days_left'], dtype='object')),\n","                                                 ('cat',\n","                                                  OneHotEncoder(handle_unknown='ignore'),\n","                                                  Index(['airline', 'departure', 'stops', 'flight', 'source', 'arrival',\n","       'destination', 'class'],\n","      dtype='object'))],\n","                                   verbose_feature_names_out=False)),\n","                ('model',\n","                 RandomForestRegressor(max_depth=10, min_samples_split=5,\n","                                       n_estimators=30, n_jobs=-1,\n","                                       random_state=42))])"]},"execution_count":51,"metadata":{},"output_type":"execute_result"}],"source":["from sklearn.ensemble import RandomForestRegressor\n","\n","pipe_rf = Pipeline([\n","    ('preprocessor', preprocessor),\n","    ('model', RandomForestRegressor(n_jobs=-1, random_state=42))\n","])\n","\n","params_rf = {\n","    'model__n_estimators': [10, 30],\n","    'model__max_depth': [5, 10],\n","    'model__min_samples_split': [5, 10]\n","}\n","\n","grid_rf = RandomizedSearchCV(pipe_rf, params_rf, n_iter=5, cv=3, scoring='r2', n_jobs=-1)\n","grid_rf.fit(X_sample, y_sample)\n","\n","print(\"Random Forest Best:\", grid_rf.best_params_)\n","print(\"Score (30% CV):\", grid_rf.best_score_)\n","\n","best_rf = grid_rf.best_estimator_\n","best_rf.fit(X, y)"]},{"cell_type":"markdown","id":"de0d8378","metadata":{"papermill":{"duration":0.019719,"end_time":"2025-10-08T15:54:31.122614","exception":false,"start_time":"2025-10-08T15:54:31.102895","status":"completed"},"tags":[]},"source":["### 7. Gradient Boosting Regressor with tuning"]},{"cell_type":"code","execution_count":52,"id":"73f34739","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:54:31.163132Z","iopub.status.busy":"2025-10-08T15:54:31.162824Z","iopub.status.idle":"2025-10-08T15:54:45.966613Z","shell.execute_reply":"2025-10-08T15:54:45.965709Z"},"papermill":{"duration":14.825711,"end_time":"2025-10-08T15:54:45.967886","exception":false,"start_time":"2025-10-08T15:54:31.142175","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Gradient Boosting Best: {'model__n_estimators': 100, 'model__max_depth': 5, 'model__learning_rate': 0.1}\n","Score (30% CV): 0.9480445607919377\n"]},{"data":{"text/html":["<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,\n","                 ColumnTransformer(transformers=[(&#x27;num&#x27;, StandardScaler(),\n","                                                  Index([&#x27;duration&#x27;, &#x27;days_left&#x27;], dtype=&#x27;object&#x27;)),\n","                                                 (&#x27;cat&#x27;,\n","                                                  OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n","                                                  Index([&#x27;airline&#x27;, &#x27;departure&#x27;, &#x27;stops&#x27;, &#x27;flight&#x27;, &#x27;source&#x27;, &#x27;arrival&#x27;,\n","       &#x27;destination&#x27;, &#x27;class&#x27;],\n","      dtype=&#x27;object&#x27;))],\n","                                   verbose_feature_names_out=False)),\n","                (&#x27;model&#x27;, GradientBoostingRegressor(max_depth=5))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-15\" type=\"checkbox\" ><label for=\"sk-estimator-id-15\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,\n","                 ColumnTransformer(transformers=[(&#x27;num&#x27;, StandardScaler(),\n","                                                  Index([&#x27;duration&#x27;, &#x27;days_left&#x27;], dtype=&#x27;object&#x27;)),\n","                                                 (&#x27;cat&#x27;,\n","                                                  OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n","                                                  Index([&#x27;airline&#x27;, &#x27;departure&#x27;, &#x27;stops&#x27;, &#x27;flight&#x27;, &#x27;source&#x27;, &#x27;arrival&#x27;,\n","       &#x27;destination&#x27;, &#x27;class&#x27;],\n","      dtype=&#x27;object&#x27;))],\n","                                   verbose_feature_names_out=False)),\n","                (&#x27;model&#x27;, GradientBoostingRegressor(max_depth=5))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-16\" type=\"checkbox\" ><label for=\"sk-estimator-id-16\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">preprocessor: ColumnTransformer</label><div class=\"sk-toggleable__content\"><pre>ColumnTransformer(transformers=[(&#x27;num&#x27;, StandardScaler(),\n","                                 Index([&#x27;duration&#x27;, &#x27;days_left&#x27;], dtype=&#x27;object&#x27;)),\n","                                (&#x27;cat&#x27;, OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n","                                 Index([&#x27;airline&#x27;, &#x27;departure&#x27;, &#x27;stops&#x27;, &#x27;flight&#x27;, &#x27;source&#x27;, &#x27;arrival&#x27;,\n","       &#x27;destination&#x27;, &#x27;class&#x27;],\n","      dtype=&#x27;object&#x27;))],\n","                  verbose_feature_names_out=False)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-17\" type=\"checkbox\" ><label for=\"sk-estimator-id-17\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">num</label><div class=\"sk-toggleable__content\"><pre>Index([&#x27;duration&#x27;, &#x27;days_left&#x27;], dtype=&#x27;object&#x27;)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-18\" type=\"checkbox\" ><label for=\"sk-estimator-id-18\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">StandardScaler</label><div class=\"sk-toggleable__content\"><pre>StandardScaler()</pre></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-19\" type=\"checkbox\" ><label for=\"sk-estimator-id-19\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">cat</label><div class=\"sk-toggleable__content\"><pre>Index([&#x27;airline&#x27;, &#x27;departure&#x27;, &#x27;stops&#x27;, &#x27;flight&#x27;, &#x27;source&#x27;, &#x27;arrival&#x27;,\n","       &#x27;destination&#x27;, &#x27;class&#x27;],\n","      dtype=&#x27;object&#x27;)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-20\" type=\"checkbox\" ><label for=\"sk-estimator-id-20\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">OneHotEncoder</label><div class=\"sk-toggleable__content\"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-21\" type=\"checkbox\" ><label for=\"sk-estimator-id-21\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GradientBoostingRegressor</label><div class=\"sk-toggleable__content\"><pre>GradientBoostingRegressor(max_depth=5)</pre></div></div></div></div></div></div></div>"],"text/plain":["Pipeline(steps=[('preprocessor',\n","                 ColumnTransformer(transformers=[('num', StandardScaler(),\n","                                                  Index(['duration', 'days_left'], dtype='object')),\n","                                                 ('cat',\n","                                                  OneHotEncoder(handle_unknown='ignore'),\n","                                                  Index(['airline', 'departure', 'stops', 'flight', 'source', 'arrival',\n","       'destination', 'class'],\n","      dtype='object'))],\n","                                   verbose_feature_names_out=False)),\n","                ('model', GradientBoostingRegressor(max_depth=5))])"]},"execution_count":52,"metadata":{},"output_type":"execute_result"}],"source":["from sklearn.ensemble import GradientBoostingRegressor\n","\n","pipe_gb = Pipeline([\n","    ('preprocessor', preprocessor),\n","    ('model', GradientBoostingRegressor())\n","])\n","\n","params_gb = {\n","    'model__n_estimators': [50, 100],\n","    'model__learning_rate': [0.05, 0.1],\n","    'model__max_depth': [3, 5]\n","}\n","\n","grid_gb = RandomizedSearchCV(pipe_gb, params_gb, n_iter=5, cv=3, scoring='r2', n_jobs=-1)\n","grid_gb.fit(X_sample, y_sample)\n","\n","print(\"Gradient Boosting Best:\", grid_gb.best_params_)\n","print(\"Score (30% CV):\", grid_gb.best_score_)\n","\n","best_gb = grid_gb.best_estimator_\n","best_gb.fit(X, y)"]},{"cell_type":"markdown","id":"49c82d42","metadata":{"papermill":{"duration":0.019375,"end_time":"2025-10-08T15:54:46.007871","exception":false,"start_time":"2025-10-08T15:54:45.988496","status":"completed"},"tags":[]},"source":["### 8. Lasso Regression with tuning"]},{"cell_type":"code","execution_count":53,"id":"e370a95d","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:54:46.047879Z","iopub.status.busy":"2025-10-08T15:54:46.047602Z","iopub.status.idle":"2025-10-08T15:54:50.012979Z","shell.execute_reply":"2025-10-08T15:54:50.010561Z"},"papermill":{"duration":3.987693,"end_time":"2025-10-08T15:54:50.014864","exception":false,"start_time":"2025-10-08T15:54:46.027171","status":"completed"},"tags":[]},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_search.py:305: UserWarning: The total space of parameters 4 is smaller than n_iter=5. Running 4 iterations. For exhaustive searches, use GridSearchCV.\n","  warnings.warn(\n"]},{"name":"stdout","output_type":"stream","text":["Lasso Best: {'model__alpha': 0.001}\n","Score (30% CV): 0.9086678775674906\n"]},{"data":{"text/html":["<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,\n","                 ColumnTransformer(transformers=[(&#x27;num&#x27;, StandardScaler(),\n","                                                  Index([&#x27;duration&#x27;, &#x27;days_left&#x27;], dtype=&#x27;object&#x27;)),\n","                                                 (&#x27;cat&#x27;,\n","                                                  OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n","                                                  Index([&#x27;airline&#x27;, &#x27;departure&#x27;, &#x27;stops&#x27;, &#x27;flight&#x27;, &#x27;source&#x27;, &#x27;arrival&#x27;,\n","       &#x27;destination&#x27;, &#x27;class&#x27;],\n","      dtype=&#x27;object&#x27;))],\n","                                   verbose_feature_names_out=False)),\n","                (&#x27;model&#x27;, Lasso(alpha=0.001))])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-22\" type=\"checkbox\" ><label for=\"sk-estimator-id-22\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;preprocessor&#x27;,\n","                 ColumnTransformer(transformers=[(&#x27;num&#x27;, StandardScaler(),\n","                                                  Index([&#x27;duration&#x27;, &#x27;days_left&#x27;], dtype=&#x27;object&#x27;)),\n","                                                 (&#x27;cat&#x27;,\n","                                                  OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n","                                                  Index([&#x27;airline&#x27;, &#x27;departure&#x27;, &#x27;stops&#x27;, &#x27;flight&#x27;, &#x27;source&#x27;, &#x27;arrival&#x27;,\n","       &#x27;destination&#x27;, &#x27;class&#x27;],\n","      dtype=&#x27;object&#x27;))],\n","                                   verbose_feature_names_out=False)),\n","                (&#x27;model&#x27;, Lasso(alpha=0.001))])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-23\" type=\"checkbox\" ><label for=\"sk-estimator-id-23\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">preprocessor: ColumnTransformer</label><div class=\"sk-toggleable__content\"><pre>ColumnTransformer(transformers=[(&#x27;num&#x27;, StandardScaler(),\n","                                 Index([&#x27;duration&#x27;, &#x27;days_left&#x27;], dtype=&#x27;object&#x27;)),\n","                                (&#x27;cat&#x27;, OneHotEncoder(handle_unknown=&#x27;ignore&#x27;),\n","                                 Index([&#x27;airline&#x27;, &#x27;departure&#x27;, &#x27;stops&#x27;, &#x27;flight&#x27;, &#x27;source&#x27;, &#x27;arrival&#x27;,\n","       &#x27;destination&#x27;, &#x27;class&#x27;],\n","      dtype=&#x27;object&#x27;))],\n","                  verbose_feature_names_out=False)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-24\" type=\"checkbox\" ><label for=\"sk-estimator-id-24\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">num</label><div class=\"sk-toggleable__content\"><pre>Index([&#x27;duration&#x27;, &#x27;days_left&#x27;], dtype=&#x27;object&#x27;)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-25\" type=\"checkbox\" ><label for=\"sk-estimator-id-25\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">StandardScaler</label><div class=\"sk-toggleable__content\"><pre>StandardScaler()</pre></div></div></div></div></div></div><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-26\" type=\"checkbox\" ><label for=\"sk-estimator-id-26\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">cat</label><div class=\"sk-toggleable__content\"><pre>Index([&#x27;airline&#x27;, &#x27;departure&#x27;, &#x27;stops&#x27;, &#x27;flight&#x27;, &#x27;source&#x27;, &#x27;arrival&#x27;,\n","       &#x27;destination&#x27;, &#x27;class&#x27;],\n","      dtype=&#x27;object&#x27;)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-27\" type=\"checkbox\" ><label for=\"sk-estimator-id-27\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">OneHotEncoder</label><div class=\"sk-toggleable__content\"><pre>OneHotEncoder(handle_unknown=&#x27;ignore&#x27;)</pre></div></div></div></div></div></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-28\" type=\"checkbox\" ><label for=\"sk-estimator-id-28\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Lasso</label><div class=\"sk-toggleable__content\"><pre>Lasso(alpha=0.001)</pre></div></div></div></div></div></div></div>"],"text/plain":["Pipeline(steps=[('preprocessor',\n","                 ColumnTransformer(transformers=[('num', StandardScaler(),\n","                                                  Index(['duration', 'days_left'], dtype='object')),\n","                                                 ('cat',\n","                                                  OneHotEncoder(handle_unknown='ignore'),\n","                                                  Index(['airline', 'departure', 'stops', 'flight', 'source', 'arrival',\n","       'destination', 'class'],\n","      dtype='object'))],\n","                                   verbose_feature_names_out=False)),\n","                ('model', Lasso(alpha=0.001))])"]},"execution_count":53,"metadata":{},"output_type":"execute_result"}],"source":["from sklearn.linear_model import Lasso\n","\n","pipe_lasso = Pipeline([\n","    ('preprocessor', preprocessor),\n","    ('model', Lasso())\n","])\n","\n","params_lasso = {\n","    'model__alpha': [0.001, 0.01, 0.1, 1.0]\n","}\n","\n","grid_lasso = RandomizedSearchCV(pipe_lasso, params_lasso, n_iter=5, cv=3, scoring='r2', n_jobs=-1)\n","grid_lasso.fit(X_sample, y_sample)\n","\n","print(\"Lasso Best:\", grid_lasso.best_params_)\n","print(\"Score (30% CV):\", grid_lasso.best_score_)\n","\n","best_lasso = grid_lasso.best_estimator_\n","best_lasso.fit(X, y)"]},{"cell_type":"markdown","id":"01bea2ba","metadata":{"papermill":{"duration":0.033102,"end_time":"2025-10-08T15:54:50.083241","exception":false,"start_time":"2025-10-08T15:54:50.050139","status":"completed"},"tags":[]},"source":["### 9. SVR with tuning"]},{"cell_type":"code","execution_count":54,"id":"e9263ee1","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:54:50.130654Z","iopub.status.busy":"2025-10-08T15:54:50.130348Z","iopub.status.idle":"2025-10-08T15:54:50.134071Z","shell.execute_reply":"2025-10-08T15:54:50.133474Z"},"papermill":{"duration":0.02559,"end_time":"2025-10-08T15:54:50.135226","exception":false,"start_time":"2025-10-08T15:54:50.109636","status":"completed"},"tags":[]},"outputs":[],"source":["# from sklearn.svm import SVR\n","\n","# pipe_svr = Pipeline([\n","#     ('preprocessor', preprocessor),\n","#     ('model', SVR())\n","# ])\n","\n","# params_svr = {\n","#     'model__C': [1, 10],\n","#     'model__kernel': ['linear', 'rbf']\n","# }\n","\n","# grid_svr = RandomizedSearchCV(pipe_svr, params_svr, n_iter=5, cv=3, scoring='r2', n_jobs=-1)\n","# grid_svr.fit(X_sample, y_sample)\n","\n","# print(\"SVR Best:\", grid_svr.best_params_)\n","# print(\"Score (30% CV):\", grid_svr.best_score_)\n","\n","# best_svr = grid_svr.best_estimator_\n","# best_svr.fit(X, y)"]},{"cell_type":"markdown","id":"8005bbec","metadata":{"papermill":{"duration":0.019663,"end_time":"2025-10-08T15:54:50.175106","exception":false,"start_time":"2025-10-08T15:54:50.155443","status":"completed"},"tags":[]},"source":["# Submiting Best Model"]},{"cell_type":"code","execution_count":55,"id":"acac156a","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:54:50.21671Z","iopub.status.busy":"2025-10-08T15:54:50.216395Z","iopub.status.idle":"2025-10-08T15:54:54.496567Z","shell.execute_reply":"2025-10-08T15:54:54.495578Z"},"papermill":{"duration":4.302596,"end_time":"2025-10-08T15:54:54.498001","exception":false,"start_time":"2025-10-08T15:54:50.195405","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Decision Tree: R2 Score = 0.9990\n"]}],"source":["from sklearn.tree import DecisionTreeRegressor\n","\n","pipeline_dt = Pipeline(steps=[\n","    ('preprocessor', preprocessor),\n","    ('model', DecisionTreeRegressor())\n","])\n","\n","pipeline_dt.fit(X, y)\n","pred_dt = pipeline_dt.predict(X_val)\n","score_dt = r2_score(y_val, pred_dt)\n","print(f\"Decision Tree: R2 Score = {score_dt:.4f}\")"]},{"cell_type":"code","execution_count":56,"id":"b38c22ec","metadata":{"execution":{"iopub.execute_input":"2025-10-08T15:54:54.539789Z","iopub.status.busy":"2025-10-08T15:54:54.539497Z","iopub.status.idle":"2025-10-08T15:54:54.602725Z","shell.execute_reply":"2025-10-08T15:54:54.601763Z"},"papermill":{"duration":0.085564,"end_time":"2025-10-08T15:54:54.604066","exception":false,"start_time":"2025-10-08T15:54:54.518502","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["✅ Submission file created: submission.csv\n"]}],"source":["import pandas as pd\n","\n","# Predict (pipeline already includes preprocessor)\n","y_pred_log = pipeline_dt.predict(test_df_t)\n","\n","# Inverse transform to get back original price\n","y_pred_price = np.expm1(y_pred_log)\n","\n","# Create submission\n","submission = pd.DataFrame({\n","    'id': test_df['id'],\n","    'price': y_pred_price\n","})\n","\n","submission.to_csv('submission.csv', index=False)\n","print(\"✅ Submission file created: submission.csv\")\n"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"databundleVersionId":12770423,"sourceId":105665,"sourceType":"competition"}],"dockerImageVersionId":31040,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.11"},"papermill":{"default_parameters":{},"duration":79.489115,"end_time":"2025-10-08T15:54:57.244089","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2025-10-08T15:53:37.754974","version":"2.6.0"}},"nbformat":4,"nbformat_minor":5}